from typing import Sequence


def sort(container: Sequence[int]) -> Sequence[int]:
    """
    Сортировка подсчетами

    1. Определите максимальное значение в массиве и заполните вспомогательный массив с подсчетом количества элементов.
    2. Посчитайте количество каждого объекта
    3. Зная количество каждого объекта, восстановите отсортированный массив

    :param container: Массив, который надо отсортировать
    :return: Отсортированный в порядке возрастания массив
    """
    length = len(container)

    output = [0] * length  # список для отсортированных значений
    middle = [0] * (length + 1)  # промежуточный список

    for i in container:  # считаем количество вхождений каждого элемента
        middle[i] += 1  # значение элемента i из container здесь - это количество вхождений по индексу

    total = 0
    for i in range(length + 1):  # пересобираем список по возрастанию, где шаг - количество вхождений числа
        step = middle[i]  # количество совпадений определяет шаг
        middle[i] = total  # собираем список из шагов
        total += step  # для сортировки шаг может только расти

    for i in container:  # обращаем индексы обратно в элементы используя шаг между элементами списка
        output[middle[i]] = i
        middle[i] += 1

    return output
